name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout tsgo
        uses: actions/checkout@v4

      - name: Update submodules
        run: git submodule update --init --remote

      - name: Apply WASM Patch
        working-directory: tsgo
        run: git apply ../wasm.patch

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: tsgo/go.sum

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: tsgo/package-lock.json
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        working-directory: tsgo
        run: npm ci

      - name: Build Lib
        working-directory: tsgo
        run: npm exec hereby lib

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Create Tag
        run: git tag ${{ steps.date.outputs.date }}

      - name: Get tsgo Latest Commit SHA
        id: tsgo_commit
        working-directory: tsgo
        run: echo "tsgo_commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --skip=validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TSGO_COMMIT: ${{ steps.tsgo_commit.outputs.tsgo_commit }}

      - name: Publish WASM
        run: ./prepare.sh && npm publish
        working-directory: packages/wasm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
          TSGO_COMMIT: ${{ steps.tsgo_commit.outputs.tsgo_commit }}
